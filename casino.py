import casino_config, configparser, threading, worker
from casino_config import (bot, types, db, keyboard, support)
from casino_config import (status_deposit, cancel_deposit, casino_deposit, set_nickname, set_code, new_referal, casino_receive, casino_promo, coinflip, crash, crash_start, nvuti, float_2f)

@bot.message_handler(commands=['start'])  
def start_command(message):
	try:

		chat_id = message.chat.id
		start = message.text.split()

		if not db.user_exists_casino(chat_id):

			if len(start) == 2:
				exists = db.workers_exists_code(start[1])

				if exists is not False:

					db.user_add_casino(chat_id, '–°–∫—Ä—ã—Ç', start[1])
					set_nickname(message)

					bot.send_message(chat_id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>{message.from_user.first_name}</b>\n–£ –Ω–∞—Å –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä –≤–∏–¥–∞ –∏–≥—Ä, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–æ–π–¥—É—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
						parse_mode="html", reply_markup = keyboard.casino_keyboard())

					new_referal(message)
				else:
					db.user_add_casino(chat_id, '–°–∫—Ä—ã—Ç', 0)
					set_nickname(message)

					message = bot.send_message(chat_id, f"‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥</b> –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –≤–∞—Å —á–µ–ª–æ–≤–µ–∫–∞", parse_mode="html")
					bot.register_next_step_handler(message, set_code)
			else:
				db.user_add_casino(chat_id, '–°–∫—Ä—ã—Ç', 0)
				set_nickname(message)

				message = bot.send_message(chat_id, f"–î–ª—è –Ω–∞—á–∞–ª–∞ <b>–≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥</b> –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –≤–∞—Å —á–µ–ª–æ–≤–µ–∫–∞", parse_mode="html")
				bot.register_next_step_handler(message, set_code)
		else:

			code = db.casino_code(chat_id)

			if code == 0:
				message = bot.send_message(chat_id, f"–î–ª—è –Ω–∞—á–∞–ª–∞ <b>–≤–≤–µ–¥–∏—Ç–µ</b> 589016", parse_mode="html")
				bot.register_next_step_handler(message, set_code)
			else:
				bot.send_message(chat_id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>{message.from_user.first_name}</b>\n–£ –Ω–∞—Å –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä –≤–∏–¥–∞ –∏–≥—Ä, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–æ–π–¥—É—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
					parse_mode="html", reply_markup = keyboard.casino_keyboard())

	except Exception as e:
		print(e)

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
	try:

		chat_id = message.chat.id

		config = configparser.ConfigParser()
		config.read("default.ini")
		status = config['Telegram']['messages']

		if status == '1':
			

			if message.text == '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç':
				balance = float_2f(db.casino_balance(chat_id))
				win = db.casino_win(chat_id)
				lose = db.casino_lose(chat_id)
				deposit = db.casino_deposit(chat_id)
				receive = db.casino_receive(chat_id)
				All = win + lose

				inline_keyboard = types.InlineKeyboardMarkup(row_width = 2)
				inline_1 = types.InlineKeyboardButton(text = "–ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data = 'DEPOSIT')
				inline_2 = types.InlineKeyboardButton(text = "–í—ã–≤–µ—Å—Ç–∏", callback_data = 'RECEIVE')
				inline_3 = types.InlineKeyboardButton(text = "–ü—Ä–æ–º–æ–∫–æ–¥", callback_data = 'PROMO')
				inline_4 = types.InlineKeyboardButton(text = "–û–±–Ω—É–ª–∏—Ç—å", callback_data = 'RESET')
				inline_keyboard.add(inline_1, inline_2, inline_3, inline_4)

				bot.send_message(chat_id, f'üí∏ –í–∞—à <b>–ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n–ë–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ\n\n–ò–≥—Ä –≤—Å–µ–≥–æ - {All}\n–ò–≥—Ä –≤—ã–∏–≥—Ä–∞–Ω–æ - {win}'
					+ f'\n–ò–≥—Ä –ø—Ä–æ–∏–≥—Ä–∞–Ω–æ - {lose}\n\n–ó–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–≤–æ–¥ - {receive}\n–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–π - {deposit}', parse_mode = 'html', reply_markup = inline_keyboard)
			elif message.text == '–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞':

				bot.send_message(chat_id, f'üíª –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è <b>–ø–æ–¥–¥–µ—Ä–∂–∫–∞</b> - {support}', parse_mode = 'html')
			elif message.text == '–ò–≥—Ä–∞—Ç—å':

				bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ <b>—Ä–µ–∂–∏–º</b> –∏–≥—Ä—ã', parse_mode = 'html', reply_markup = keyboard.game_keyboard())
			elif message.text == '–û—Ä–µ–ª & –†–µ—à–∫–∞':
				balance = float_2f(db.casino_balance(chat_id))
				message = bot.send_message(chat_id, f'–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {balance} ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.endgame_keyboard())
				bot.register_next_step_handler(message, coinflip, balance)
			elif message.text == '–ö—Ä–∞—à':
				balance = float_2f(db.casino_balance(chat_id))
				message = bot.send_message(chat_id, f'–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {balance} ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.endgame_keyboard())
				bot.register_next_step_handler(message, crash, balance)
			elif message.text == '–ö–∞–∑–∏–Ω–æ':
				balance = float_2f(db.casino_balance(chat_id))
				message = bot.send_message(chat_id, f'–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {balance} ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.endgame_keyboard())
				bot.register_next_step_handler(message, nvuti, balance)
			elif message.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É':

				bot.send_message(chat_id, f'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>—Å–ø–∏—Å–æ–∫</b> –∏–≥—Ä', parse_mode="html", reply_markup = keyboard.game_keyboard())
			elif message.text == '–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ':

				cancel_deposit(message)
			elif message.text == '–ù–∞–∑–∞–¥':

				bot.send_message(chat_id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–µ</b> –º–µ–Ω—é', parse_mode = 'html', reply_markup = keyboard.casino_keyboard())
		else:

			bot.send_message(chat_id, 'üïî –ë–æ—Ç –Ω–∞ <b>—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö</b> —Ä–∞–±–æ—Ç–∞—Ö', parse_mode = 'html')

		Thread = threading.Thread(target = set_nickname, args = (message,))
		Thread.start()

	except Exception as e:
		print(e)

@bot.callback_query_handler(func=lambda call: True)
def answer(call):
	try:
		chat_id = call.message.chat.id

		if call.data == 'RESET':
			db.casino_reset(chat_id)

			balance = db.casino_balance(chat_id)
			win = db.casino_win(chat_id)
			lose = db.casino_lose(chat_id)
			deposit = db.casino_deposit(chat_id)
			receive = db.casino_receive(chat_id)
			All = win + lose

			inline_keyboard = types.InlineKeyboardMarkup(row_width = 2)
			inline_1 = types.InlineKeyboardButton(text = "–ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data = 'DEPOSIT')
			inline_2 = types.InlineKeyboardButton(text = "–í—ã–≤–µ—Å—Ç–∏", callback_data = 'RECEIVE')
			inline_3 = types.InlineKeyboardButton(text = "–ü—Ä–æ–º–æ–∫–æ–¥", callback_data = 'PROMO')
			inline_4 = types.InlineKeyboardButton(text = "–û–±–Ω—É–ª–∏—Ç—å", callback_data = 'RESET')
			inline_keyboard.add(inline_1, inline_2, inline_3, inline_4)

			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f'üí∏ –í–∞—à <b>–ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n–ë–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ\n\n–ò–≥—Ä –≤—Å–µ–≥–æ - {All}\n–ò–≥—Ä –≤—ã–∏–≥—Ä–∞–Ω–æ - {win}'
				+ f'\n–ò–≥—Ä –ø—Ä–æ–∏–≥—Ä–∞–Ω–æ - {lose}\n\n–ó–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–≤–æ–¥ - {receive}\n–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–π - {deposit}', parse_mode = 'html', reply_markup = inline_keyboard)
		elif call.data == 'RECEIVE':

			balance = db.casino_balance(chat_id)

			if (balance > 0):
				message = bot.send_message(chat_id, 'üí∏ –í–≤–µ–¥–∏—Ç–µ <b>—Ä–µ–∫–≤–∏–∑–∏—Ç—ã</b> –¥–ª—è –≤—ã–≤–æ–¥–∞\n–î–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞ –≤—ã–≤–æ–¥–∏—Ç—å —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ —Ç–æ—Ç –∫–æ—à–µ–ª–µ–∫, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –±—ã–ª–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ', parse_mode = 'html')
				bot.register_next_step_handler(message, casino_receive, balance)
			else:
				bot.send_message(chat_id, '‚ö†Ô∏è <b>–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ</b> —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ', parse_mode = 'html')
		elif call.data == 'PROMO':
			message = bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ <b>–ø—Ä–æ–º–æ–∫–æ–¥</b>', parse_mode = 'html')
			bot.register_next_step_handler(message, casino_promo)
		elif 'CRASH_' in call.data:
			RegEx = call.data.split('_')

			Thread = threading.Thread(target = crash_start, args = (call, RegEx[1], RegEx[2]))
			Thread.start()
		elif call.data == 'DEPOSIT':

			code = db.casino_code(chat_id)

			if code == 0:
				message = bot.send_message(chat_id, f"–î–ª—è –Ω–∞—á–∞–ª–∞ <b>–≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥</b> –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –≤–∞—Å —á–µ–ª–æ–≤–µ–∫–∞", parse_mode="html")
				bot.register_next_step_handler(message, set_code)
			else:
				message = bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –æ—Ç 250 ‚ÇΩ –¥–æ 5000 ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.deposit_keyboard())
				bot.register_next_step_handler(message, casino_deposit)
		elif 'STATUS_' in call.data:

			RegEx = call.data.split('_')

			billId = f'{RegEx[2]}_{RegEx[3]}'

			status_deposit(call, RegEx[1], billId)



	except Exception as e:
		raise e

bot.polling(none_stop = True, interval = 0)		