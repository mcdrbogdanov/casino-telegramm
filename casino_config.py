import telebot
from telebot import types

from SimpleQIWI import *
import json

from time import sleep

import datetime, threading, database, keyboard, configparser, function, random
from function import create_promo, float_2f, bill_create, share_pay

from datetime import timedelta

bot = telebot.TeleBot('5950658208:AAHANZJpFZK43qihGgUFlTBZ8xOel4B3I0Q') # —Ç–æ–∫–µ–Ω –∫–∞–∑–∏–Ω–æ
db = database



support = '@anonimiusrrr' # @username —Å–∞–ø–ø–æ—Ä—Ç–∞ –ø–æ –∫–∞–∑–∏–Ω–æ
chat_workers = -100185041413 # ID —á–∞—Ç–∞ –≤–æ—Ä–∫–µ—Ä–æ–≤
chat_channel = -100185041413 # ID –∫–∞–Ω–∞–ª–∞ –∑–∞–ª–µ—Ç–æ–≤
id_bot = 5950658208 # ID –±–æ—Ç–∞ –∫–∞–∑–∏–Ω–æ

in_deposit = []

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞

def set_nickname(message):
	try:
			
		if message.from_user.id != id_bot:

			if message.from_user.username is not None:
				db.casino_update_username(message.chat.id, f'@{message.from_user.username}')
			elif message.from_user.first_name is not None:
				db.casino_update_username(message.chat.id, message.from_user.first_name)

	except Exception as e:
		print(e)

# –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞

def set_code(message):
	try:

		exists = db.workers_exists_code(message.text)

		if exists is not False:

			db.casino_update_invite(message.chat.id, message.text)
			bot.send_message(message.chat.id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>{message.from_user.first_name}</b>\n–£ –Ω–∞—Å –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä –≤–∏–¥–∞ –∏–≥—Ä, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–æ–π–¥—É—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
				parse_mode="html", reply_markup = keyboard.casino_keyboard())

			new_referal(message)
		else:
			message = bot.send_message(message.chat.id, f"‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥</b> –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –≤–∞—Å —á–µ–ª–æ–≤–µ–∫–∞", parse_mode="html")
			bot.register_next_step_handler(message, set_code)

	except Exception as e:
		print(e)

# –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

def new_referal(message):
	try:
		

		code = db.casino_code(message.chat.id)
		username = db.casino_username(message.chat.id)
		worker_id = db.workers_user_id(code)

		sended_message = f'üíû –¢–≤–æ–π <b>–Ω–æ–≤—ã–π</b> –º–∞–º–æ–Ω—Ç - {username}'
		function.new_referal(worker_id, sended_message)

	except Exception as e:
		print(e)

def new_deposit(message, value):
	try:
		code = db.casino_code(message.chat.id)
		username = db.casino_username(message.chat.id)
		worker_id = db.workers_user_id(code)

		sended_message = f'üí≥ –ú–∞–º–æ–Ω—Ç –Ω–∞ <b>–æ–ø–ª–∞—Ç–µ</b>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n–°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {value} ‚ÇΩ'
		function.new_deposit(worker_id, message.chat.id, value, sended_message)
	except Exception as e:
		print(e)

def new_profit(call, value):
	try:
		code = db.casino_code(call.message.chat.id)
		username = db.casino_username(call.message.chat.id)
		worker_id = db.workers_user_id(code)
		username_worker = db.workers_username(worker_id)

		share = share_pay(value)
		db.workers_add_profit(worker_id, share)

		sended_message = f'üíû –£—Å–ø–µ—à–Ω–∞—è <b>–æ–ø–ª–∞—Ç–∞</b>\n–¢–≤–æ—è –¥–æ–ª—è ~ <b>{share}</b>\n\nüí∏ –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞: <b>{value}</b> ‚ÇΩ\nüë®‚Äçüíª –ú–∞–º–æ–Ω—Ç: {username}'
		function.new_profit(worker_id, chat_workers, chat_channel, value, sended_message, username_worker, share)
	except Exception as e:
		print(e)	

# –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ

def status_deposit(call, value, billId):
	try:
		

		fake = db.casino_fake(call.message.chat.id)

		if fake != 0:

			db.casino_fake_clear(call.message.chat.id)
			db.casino_add_balance(call.message.chat.id, fake)
			db.casino_add_deposit(call.message.chat.id)
			in_deposit.remove(str(call.message.chat.id))

			bot.send_message(call.message.chat.id, f'–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ —Å—É–º–º—É <b>{fake}</b> ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.casino_keyboard())
		else:

			config = configparser.ConfigParser()
			config.read("default.ini")
			phone = config['Telegram']['phone']
			token = config['Telegram']['token']

			api = QApi(phone = phone, token = token)
			payments = api.payments['data']

			is_pay = 0
			for payment in payments:

				if (str(payment['comment']) == str(billId)):

					if str(value) == str(payment['sum']['amount']):

						db.casino_add_balance(call.message.chat.id, value)
						db.casino_add_deposit(call.message.chat.id)
						in_deposit.remove(str(call.message.chat.id))
						is_pay = 1

						bot.send_message(call.message.chat.id, f'–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ —Å—É–º–º—É <b>{value}</b> ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.casino_keyboard())

						new_profit(call, value)
			if is_pay == 0:
				bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")

	except Exception as e:
		raise e

def cancel_deposit(message):
	try:
		chat_id = message.chat.id

		if (str(chat_id) in in_deposit):

			in_deposit.remove(str(chat_id))
			bot.send_message(chat_id, '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ <b>–æ—Ç–º–µ–Ω–µ–Ω–æ</b>', parse_mode = 'html', reply_markup = keyboard.casino_keyboard())

		else:
			bot.send_message(chat_id, '–°–µ—Å—Å–∏—è –±—ã–ª–∞ <b>–æ—Ç–º–µ–Ω–µ–Ω–∞</b> –∏–ª–∏ <b>–Ω–µ –Ω–∞–π–¥–µ–Ω–∞</b>', parse_mode = 'html', reply_markup = keyboard.casino_keyboard())

	except Exception as e:
		print(e)

def deposit_timeout(message):
	try:
		end = datetime.datetime.now() + timedelta(minutes = 10)

		thread = 1
		while (thread == 1):
			if (datetime.datetime.now() > end):
				bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
				in_deposit.remove(str(message.chat.id))
				thread = 0
			elif (str(message.chat.id) not in in_deposit):
				bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
				thread = 0

			sleep(0.5)
	except Exception as e:
		print(e)

def casino_deposit(message):
	try:
		
		chat_id = message.chat.id

		if (str(chat_id) in in_deposit):
			bot.send_message(message.chat.id, f'–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å <b>–∞–∫—Ç–∏–≤–Ω–∞—è</b> —Å–µ—Å—Å–∏—è', parse_mode = 'html')
		elif message.text.isdigit():

			value = int(message.text)

			if (value == 1) or (value <= 5000 and value >= 250):

				config = configparser.ConfigParser()
				config.read("default.ini")
				phone = config['Telegram']['phone']
				token = config['Telegram']['token']

				code = db.casino_code(chat_id)
				billId = f'{bill_create(6)}_{code}'

				inline_keyboard = types.InlineKeyboardMarkup(row_width = 2)
				inline_1 = types.InlineKeyboardButton(text = "üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π", url = f'https://qiwi.com/payment/form/99?extra[%27account%27]=+{phone}&amountInteger={message.text}&amountFraction=0&currency=643&extra[%27comment%27]={billId}&blocked[0]=account&blocked[1]=comment')
				inline_2 = types.InlineKeyboardButton(text = "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data = f'STATUS_{value}_{billId}')
				inline_keyboard.add(inline_1, inline_2)

				in_deposit.append(str(chat_id))
				message_payment = bot.send_message(chat_id, f'–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ <b>{value}</b> ‚ÇΩ –Ω–∞ QIWI –ö–æ—à–µ–ª–µ–∫\n–°—á–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 10 –º–∏–Ω—É—Ç, –µ–≥–æ –º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å'
					+ f'\n\n–ù–æ–º–µ—Ä: {phone}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <code>{billId}</code>\n\n‚ö†Ô∏è –£—á—Ç–∏—Ç–µ, —á—Ç–æ –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤–∞—à –ø–ª–∞—Ç–µ–∂ <b>–Ω–µ –±—É–¥–µ—Ç –∑–∞—á–∏—Ç–∞–Ω</b>', parse_mode = 'html', reply_markup = inline_keyboard)

				new_deposit(message, value)

				Thread = threading.Thread(target = deposit_timeout, args = (message_payment,))
				Thread.start()
		elif message.text == '–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ':
			cancel_deposit(message)
		else:
			bot.send_message(message.chat.id, f'‚ö†Ô∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è - <b>250</b> ‚ÇΩ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è - <b>5000</b> ‚ÇΩ', parse_mode="Markdown")

	except Exception as e:
		raise e

# –í—ã–≤–æ–¥

def casino_receive(message, balance):
	try:
		

		user_phone = message.text

		user_code = db.casino_code(message.chat.id)
		worker_id = db.workers_user_id(user_code)
		worker_phone = db.workers_phone(worker_id)


		if user_phone != worker_phone:
			bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã —Å –∫–æ—Ç–æ—Ä—ã—Ö –±—ã–ª–æ <b>–ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ</b>', parse_mode = 'html')
		else:

			code = db.casino_code(message.chat.id)
			username = db.casino_username(message.chat.id)
			worker_id = db.workers_user_id(code)

			sended_message = f'üí∏ –ú–∞–º–æ–Ω—Ç –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É –Ω–∞ <b>–≤—ã–≤–æ–¥</b>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n–ù–∞ –≤—ã–≤–æ–¥–µ: {balance} ‚ÇΩ'
			function.to_receive(worker_id, message.chat.id, sended_message)

			db.casino_to_receive(message.chat.id)
			bot.send_message(message.chat.id, f'üì® –ó–∞—è–≤–∫–∞ –±—ã–ª–∞ <b>–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</b>\n–ù–∞ –≤—ã–≤–æ–¥–µ: {balance} ‚ÇΩ', parse_mode = 'html')

	except Exception as e:
		print(e)

# –ü—Ä–æ–º–æ

def casino_promo(message):
	try:


		exists = db.promo_exists(message.text)

		if exists is not False:

			pay = db.promo_pay(message.text)
			db.casino_add_balance(message.chat.id, pay)
			db.promo_delete(message.text)

			bot.send_message(message.chat.id, f'–í—ã –æ–±–Ω–∞–ª–∏—á–∏–ª–∏ <b>–ø—Ä–æ–º–æ–∫–æ–¥</b> –Ω–∞ —Å—É–º–º—É <b>{pay}</b> ‚ÇΩ',
				parse_mode = 'html')
		else:
			bot.send_message(message.chat.id, f'‚ö†Ô∏è –ü—Ä–æ–º–æ–∫–æ–¥ {message.text} <b>–Ω–µ –Ω–∞–π–¥–µ–Ω</b>', parse_mode = 'html')




	except Exception as e:
		print(e)


# –ò–≥—Ä—ã

def nvuti_choice(message, bet):
	try:
		chat_id = message.chat.id
		status = db.casino_status(chat_id)
		array = ['< 50', '= 50', '> 50']
		choice = message.text

		if choice in array:

			if (status == 2):

				kk = random.randint(0, 100)

				if choice == '< 50':

					if kk < 50:
						win = function.float_2f(float(bet) * 2)
						db.casino_add_win(chat_id, win)

						bot.send_message(chat_id, f'–í—ã <b>–≤—ã–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ - <b>{kk}</b>', parse_mode = 'html')
					else:
						bet = function.float_2f(float(bet))
						db.casino_add_lose(chat_id, bet)

						bot.send_message(chat_id, f'–í—ã <b>–ø—Ä–æ–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–ª(–∞) - <b>{choice}</b>', parse_mode = 'html')
				if choice == '= 50':

					if kk == 50:
						win = function.float_2f(float(bet) * 10)
						db.casino_add_win(chat_id, win)

						bot.send_message(chat_id, f'–í—ã <b>–≤—ã–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ - <b>{kk}</b>', parse_mode = 'html')
					else:
						bet = function.float_2f(float(bet))
						db.casino_add_lose(chat_id, bet)

						bot.send_message(chat_id, f'–í—ã <b>–ø—Ä–æ–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–ª(–∞) - <b>{choice}</b>', parse_mode = 'html')
				if choice == '> 50':

					if kk > 50:
						win = function.float_2f(float(bet) * 2)
						db.casino_add_win(chat_id, win)

						bot.send_message(chat_id, f'–í—ã <b>–≤—ã–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ - <b>{kk}</b>', parse_mode = 'html')
					else:
						bet = function.float_2f(float(bet))
						db.casino_add_lose(chat_id, bet)

						bot.send_message(chat_id, f'–í—ã <b>–ø—Ä–æ–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–ª(–∞) - <b>{choice}</b>', parse_mode = 'html')
			elif (status == 1):

				if choice == '< 50':

					win = function.float_2f(float(bet) * 2)
					db.casino_add_win(chat_id, win)

					kk = random.randint(0, 49)
					bot.send_message(chat_id, f'–í—ã <b>–≤—ã–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ - <b>{kk}</b>', parse_mode = 'html')
				elif choice == '= 50':
					win = function.float_2f(float(bet) * 10)
					db.casino_add_win(chat_id, win)

					bot.send_message(chat_id, f'–í—ã <b>–≤—ã–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ - <b>50</b>', parse_mode = 'html')
				elif choice == '> 50':
					win = function.float_2f(float(bet) * 2)
					db.casino_add_win(chat_id, win)

					kk = random.randint(51, 100)
					bot.send_message(chat_id, f'–í—ã <b>–≤—ã–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ - <b>{kk}</b>', parse_mode = 'html')
			elif (status == 3):
				if choice == '< 50':

					bet = function.float_2f(float(bet))
					db.casino_add_lose(chat_id, bet)

					kk = random.randint(51, 100)
					bot.send_message(chat_id, f'–í—ã <b>–ø—Ä–æ–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ - <b>{kk}</b>', parse_mode = 'html')
				elif choice == '= 50':
					bet = function.float_2f(float(bet))
					db.casino_add_lose(chat_id, bet)

					kk = random.randint(0, 49)

					bot.send_message(chat_id, f'–í—ã <b>–ø—Ä–æ–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ - <b>{kk}</b>', parse_mode = 'html')
				elif choice == '> 50':
					bet = function.float_2f(float(bet))
					db.casino_add_lose(chat_id, bet)

					kk = random.randint(0, 49)
					bot.send_message(chat_id, f'–í—ã <b>–ø—Ä–æ–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ - <b>{kk}</b>', parse_mode = 'html')


			balance = function.float_2f(db.casino_balance(chat_id))
			message = bot.send_message(chat_id, f'–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: <b>{balance}</b> ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.endgame_keyboard())
			bot.register_next_step_handler(message, nvuti, balance)

	except Exception as e:
		print(e)

def nvuti(message, balance):
	try:
		chat_id = message.chat.id
		if (function.is_float(message.text)):

			bet = float_2f(message.text)

			if (bet <= balance) and (bet > 10):

				message = bot.send_message(chat_id, f'–°—Ç–∞–≤–∫–∞ <b>–∑–∞—Å—á–∏—Ç–∞–Ω–∞</b>, –≤—ã–ø–∞–¥–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100, –≤—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥ —Å–æ–±—ã—Ç–∏—è', parse_mode = 'html', reply_markup = keyboard.nvuti_keyboard())
				bot.register_next_step_handler(message, nvuti_choice, bet)
			else:
				message = bot.send_message(message.chat.id, f'‚ö†Ô∏è <b>–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ</b> —Å—Ä–µ–¥—Å—Ç–≤ –∏–ª–∏ —Å—Ç–∞–≤–∫–∞ <b>–º–µ–Ω—å—à–µ</b> 10 ‚ÇΩ\n–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏, –¥–æ—Å—Ç—É–ø–Ω–æ: <b>{balance}</b> ‚ÇΩ', parse_mode="html")
				bot.register_next_step_handler(message, nvuti, balance)
		elif message.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É':
			bot.send_message(chat_id, f'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>—Å–ø–∏—Å–æ–∫</b> –∏–≥—Ä', parse_mode="html", reply_markup=keyboard.game_keyboard())
		else:
			message = bot.send_message(chat_id, f'–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {balance} ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.endgame_keyboard())
			bot.register_next_step_handler(message, nvuti, balance)

	except Exception as e:
		print(e)
		message = bot.send_message(chat_id, f'–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {balance} ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.endgame_keyboard())
		bot.register_next_step_handler(message, nvuti, balance)

def crash_start(call, bet, k):
	try:
		k = int(k)
		chat_id = call.message.chat.id
		balance = float_2f(db.casino_balance(chat_id))
		status = db.casino_status(chat_id)

		if (float(bet) <= balance):

			if (status == 2):

				kk = random.randint(2, 30)
				end = 0

				thread = 1
				while (thread == 1):

					if (k == end):
						win = function.float_2f(float(bet) * kk)
						db.casino_add_win(chat_id, win)

						bot.send_message(chat_id, f'–í—ã <b>–≤—ã–∏–≥—Ä–∞–ª–∏</b>! –ö–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç –∏–≥—Ä—ã - <b>{kk}</b>', parse_mode = 'html', reply_markup = keyboard.game_keyboard())

						thread = 0
					elif (end == kk):
						bet = function.float_2f(float(bet))
						db.casino_add_lose(chat_id, bet)

						bot.send_message(chat_id, f'–í—ã <b>–ø—Ä–æ–∏–≥—Ä–∞–ª–∏</b>! –ö–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç –∏–≥—Ä—ã - <b>{kk}</b>', parse_mode = 'html', reply_markup = keyboard.game_keyboard())

						thread = 0
					else:
						end += 1
						bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f'–ò–≥—Ä–∞ <b>–Ω–∞—á–∞—Ç–∞</b>\n\n–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: <b>{bet}</b> ‚ÇΩ\n–í–∞—à –∫–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç: <b>{k}</b>\n\n–ö–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç - <b>{end}</b>', parse_mode = 'html')
			elif (status == 1):

				kk = k
				end = 0

				thread = 1
				while (thread == 1):

					if (k == end):
						win = function.float_2f(float(bet) * kk)
						db.casino_add_win(chat_id, win)

						bot.send_message(chat_id, f'–í—ã <b>–≤—ã–∏–≥—Ä–∞–ª–∏</b>! –ö–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç –∏–≥—Ä—ã - <b>{kk}</b>', parse_mode = 'html', reply_markup = keyboard.game_keyboard())

						thread = 0
					else:
						end += 1
						bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f'–ò–≥—Ä–∞ <b>–Ω–∞—á–∞—Ç–∞</b>\n\n–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: <b>{bet}</b> ‚ÇΩ\n–í–∞—à –∫–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç: <b>{k}</b>\n\n–ö–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç - <b>{end}</b>', parse_mode = 'html')
			elif (status == 3):

				kk = k - 2
				end = 0

				thread = 1
				while (thread == 1):

					if (end == kk):
						bet = function.float_2f(float(bet))
						db.casino_add_lose(chat_id, bet)

						bot.send_message(chat_id, f'–í—ã <b>–ø—Ä–æ–∏–≥—Ä–∞–ª–∏</b>! –ö–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç –∏–≥—Ä—ã - <b>{kk}</b>', parse_mode = 'html', reply_markup = keyboard.game_keyboard())

						thread = 0
					else:
						end += 1
						bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f'–ò–≥—Ä–∞ <b>–Ω–∞—á–∞—Ç–∞</b>\n\n–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: <b>{bet}</b> ‚ÇΩ\n–í–∞—à –∫–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç: <b>{k}</b>\n\n–ö–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç - <b>{end}</b>', parse_mode = 'html')


		else:
			bot.send_message(chat_id, f'‚ö†Ô∏è <b>–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ</b> —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –∏–≥—Ä—ã\n–î–æ—Å—Ç—É–ø–Ω–æ: <b>{balance}</b> ‚ÇΩ', parse_mode = 'html')

	except Exception as e:
		print(e)

def crash_choice(message, bet):
	try:
		chat_id = message.chat.id
		k = message.text
		array = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
		bet = float_2f(bet)

		if k.isdigit():

			if int(k) in array:

				inline_keyboard = types.InlineKeyboardMarkup(row_width = 2)
				inline_1 = types.InlineKeyboardButton(text = "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É", callback_data = f'CRASH_{bet}_{k}')
				inline_keyboard.add(inline_1)

				bot.send_message(chat_id, f'–ò–≥—Ä–∞ <b>–≥–æ—Ç–æ–≤–∞</b>\n\n–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: <b>{bet}</b> ‚ÇΩ\n–í–∞—à –∫–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç: <b>{k}</b>\n\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ù–∞—á–∞—Ç—å –∏–≥—Ä—É¬ª', parse_mode = 'html',
					reply_markup = inline_keyboard)

			else:
				message = bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å —Å—Ç–∞–≤–∫—É –æ—Ç 2 –¥–æ 30', parse_mode = 'html')
				bot.register_next_step_handler(message, crash_choice, bet)

		elif message.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É':
			bot.send_message(chat_id, f'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>—Å–ø–∏—Å–æ–∫</b> –∏–≥—Ä', parse_mode="html", reply_markup = keyboard.game_keyboard())		


	except Exception as e:
		print(e)

def crash(message, balance):
	try:
		

		chat_id = message.chat.id
		if (function.is_float(message.text)):

			bet = float_2f(message.text)

			if (bet <= balance) and (bet > 10):

				message = bot.send_message(chat_id, '–°—Ç–∞–≤–∫–∞ <b>–∑–∞—Å—á–∏—Ç–∞–Ω–∞</b>, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å —Å—Ç–∞–≤–∫—É –æ—Ç 2 –¥–æ 30', parse_mode = 'html')
				bot.register_next_step_handler(message, crash_choice, bet)
			else:
				message = bot.send_message(message.chat.id, f'‚ö†Ô∏è <b>–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ</b> —Å—Ä–µ–¥—Å—Ç–≤ –∏–ª–∏ —Å—Ç–∞–≤–∫–∞ <b>–º–µ–Ω—å—à–µ</b> 10 ‚ÇΩ\n–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏, –¥–æ—Å—Ç—É–ø–Ω–æ: <b>{balance}</b> ‚ÇΩ', parse_mode="html")
				bot.register_next_step_handler(message, crash, balance)
		elif message.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É':
			bot.send_message(chat_id, f'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>—Å–ø–∏—Å–æ–∫</b> –∏–≥—Ä', parse_mode="html", reply_markup = keyboard.game_keyboard())
		else:
			message = bot.send_message(chat_id, f'–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {balance} ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.endgame_keyboard())
			bot.register_next_step_handler(message, crash, balance)

	except:
		message = bot.send_message(chat_id, f'–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {balance} ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.endgame_keyboard())
		bot.register_next_step_handler(message, crash, balance)

def coinflip_choice(message, bet):
	try:
		

		chat_id = message.chat.id
		status = db.casino_status(chat_id)
		array = ['–û—Ä–µ–ª', '–†–µ—à–∫–∞']
		choice = random.choice(array)

		if message.text in array:
			if (status == 1):
				win = function.float_2f(float(bet) * 2)
				db.casino_add_win(chat_id, win)

				bot.send_message(chat_id, f'–í—ã <b>–≤—ã–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–ª(–∞) - <b>{message.text}</b>', parse_mode = 'html')
			elif (status == 2):
				if message.text == choice:

					win = function.float_2f(float(bet) * 2)
					db.casino_add_win(chat_id, win)

					bot.send_message(chat_id, f'–í—ã <b>–≤—ã–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–ª(–∞) - <b>{choice}</b>', parse_mode = 'html')
				else:

					bet = function.float_2f(float(bet))
					db.casino_add_lose(chat_id, bet)

					bot.send_message(chat_id, f'–í—ã <b>–ø—Ä–æ–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–ª(–∞) - <b>{choice}</b>', parse_mode = 'html')
			elif (status == 3):
				bet = function.float_2f(float(bet))
				db.casino_add_lose(chat_id, bet)

				if message.text == '–û—Ä–µ–ª':
					choice = message.text.replace('–û—Ä–µ–ª', '–†–µ—à–∫–∞')
				else:
					choice = message.text.replace('–†–µ—à–∫–∞', '–û—Ä–µ–ª')

				bot.send_message(chat_id, f'–í—ã <b>–ø—Ä–æ–∏–≥—Ä–∞–ª–∏</b>! –í—ã–ø–∞–ª(–∞) - <b>{choice}</b>', parse_mode = 'html')

			balance = function.float_2f(db.casino_balance(chat_id))
			message = bot.send_message(chat_id, f'–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: <b>{balance}</b> ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.endgame_keyboard())
			bot.register_next_step_handler(message, coinflip, balance)

	except Exception as e:
		print(e)

def coinflip(message, balance):
	try:
		

		chat_id = message.chat.id
		if (function.is_float(message.text)):

			bet = float_2f(message.text)

			if (bet <= balance) and (bet > 10):

				message = bot.send_message(chat_id, '–°—Ç–∞–≤–∫–∞ <b>–∑–∞—Å—á–∏—Ç–∞–Ω–∞</b>, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–æ–≥–æ –ø–æ—Å—Ç–∞–≤–∏—Ç–µ', parse_mode = 'html', reply_markup = keyboard.coinflip_keyboard())
				bot.register_next_step_handler(message, coinflip_choice, bet)
			else:
				message = bot.send_message(message.chat.id, f'‚ö†Ô∏è <b>–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ</b> —Å—Ä–µ–¥—Å—Ç–≤ –∏–ª–∏ —Å—Ç–∞–≤–∫–∞ <b>–º–µ–Ω—å—à–µ</b> 10 ‚ÇΩ\n–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏, –¥–æ—Å—Ç—É–ø–Ω–æ: <b>{balance}</b> ‚ÇΩ', parse_mode="html")
				bot.register_next_step_handler(message, coinflip, balance)
		elif message.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É':
			bot.send_message(chat_id, f'–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>—Å–ø–∏—Å–æ–∫</b> –∏–≥—Ä', parse_mode="html", reply_markup=keyboard.game_keyboard())
		else:
			message = bot.send_message(chat_id, f'–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {balance} ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.endgame_keyboard())
			bot.register_next_step_handler(message, coinflip, balance)

	except:
		message = bot.send_message(chat_id, f'–í–≤–µ–¥–∏—Ç–µ <b>—Å—É–º–º—É</b> —Å—Ç–∞–≤–∫–∏\n–î–æ—Å—Ç—É–ø–Ω–æ: {balance} ‚ÇΩ', parse_mode = 'html', reply_markup = keyboard.endgame_keyboard())
		bot.register_next_step_handler(message, coinflip, balance)
